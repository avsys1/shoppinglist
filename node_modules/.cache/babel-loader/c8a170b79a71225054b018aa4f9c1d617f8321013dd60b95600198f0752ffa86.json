{"ast":null,"code":"var _jsxFileName = \"/home/mlok/Documents/test/shoppinglist/src/components/Homepage.jsx\",\n  _s = $RefreshSig$();\nimport \"../css/global.css\";\nimport Header from \"./Header\";\nimport { useEffect, useState } from \"react\";\nimport ListOfShoppingLists from \"./ListOfShoppingLists\";\nimport axios from \"axios\";\nimport useStyle from \"../context/StyleContext\";\n/**\r\n * Komponent domácí stránky\r\n *\r\n * @returns\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Homepage() {\n  _s();\n  const [dataFromRequest, setDataFromRequest] = useState(null);\n  async function getData() {\n    return new Promise((resolve, reject) => {\n      axios.get(\"http://localhost:3001/list\").then(response => {\n        setDataFromRequest(response.data);\n        resolve(response.data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  /* Při zapnutí stránky provede žádost o data ze serveru. Jakmile dostaneme response, tak si data uložíme do state  */\n  useEffect(() => {\n    getData().catch(error => {\n      console.error(\"Error occured at fetching data from server\", error.message);\n    });\n  }, []);\n  /* Reprezentuje přihlášeného uživatele */\n  const [loggedUser, setLoggedUser] = useState();\n\n  /* Jakmile dostaneme data ze serveru, tak se pokusíme najít v těchto datech uživatele, který je přihlášený podle ID.\r\n     Kdo je přihlášený máme v localStorage uloženo jako ID.\r\n     Proto mi projedeme data ze serveru a najdeme data toho, kdo má stejné ID jako náš přihlášený \r\n  */\n  useEffect(() => {\n    /* Ze začátku ovšem data mohou být nulová, a proto kontrolujeme, jestli už je máme nebo ne. Když data nemáme, tak přerušíme funkci. */\n    if (dataFromRequest == null) return;\n    /* Projedeme data ze serveru a najdeme přihlášeného uživatele a nastavíme ho */\n    setLoggedUser(dataFromRequest.find(zaznam => zaznam.id === parseInt(localStorage.getItem(\"loggedUser\"))));\n  }, [dataFromRequest]);\n\n  /* Přihlášený uživatel - Protože uchováváme v loggedUser jenom ID, tak musíme poté procházet localStorage a hledat uživatele podle ID. */\n  const checkUser = () => {\n    console.log(parseInt(localStorage.getItem(\"loggedUser\")));\n    setLoggedUser(dataFromRequest.find(zaznam => zaznam.id === parseInt(localStorage.getItem(\"loggedUser\"))));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onClick: checkUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListOfShoppingLists, {\n        user: loggedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Homepage, \"IoP/1gDj7NZP0nQofES+DuCopSc=\");\n_c = Homepage;\nexport default Homepage;\nvar _c;\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"names":["Header","useEffect","useState","ListOfShoppingLists","axios","useStyle","jsxDEV","_jsxDEV","Homepage","_s","dataFromRequest","setDataFromRequest","getData","Promise","resolve","reject","get","then","response","data","catch","error","console","message","loggedUser","setLoggedUser","find","zaznam","id","parseInt","localStorage","getItem","checkUser","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","user","_c","$RefreshReg$"],"sources":["/home/mlok/Documents/test/shoppinglist/src/components/Homepage.jsx"],"sourcesContent":["import \"../css/global.css\";\r\nimport Header from \"./Header\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ListOfShoppingLists from \"./ListOfShoppingLists\";\r\nimport axios from \"axios\";\r\nimport useStyle from \"../context/StyleContext\";\r\n/**\r\n * Komponent domácí stránky\r\n *\r\n * @returns\r\n */\r\n\r\nfunction Homepage() {\r\n  const [dataFromRequest, setDataFromRequest] = useState(null);\r\n  async function getData() {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\"http://localhost:3001/list\")\r\n        .then((response) => {\r\n          setDataFromRequest(response.data);\r\n          resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  /* Při zapnutí stránky provede žádost o data ze serveru. Jakmile dostaneme response, tak si data uložíme do state  */\r\n  useEffect(() => {\r\n    getData().catch((error) => {\r\n      console.error(\r\n        \"Error occured at fetching data from server\",\r\n        error.message\r\n      );\r\n    });\r\n  }, []);\r\n  /* Reprezentuje přihlášeného uživatele */\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  /* Jakmile dostaneme data ze serveru, tak se pokusíme najít v těchto datech uživatele, který je přihlášený podle ID.\r\n     Kdo je přihlášený máme v localStorage uloženo jako ID.\r\n     Proto mi projedeme data ze serveru a najdeme data toho, kdo má stejné ID jako náš přihlášený \r\n  */\r\n  useEffect(() => {\r\n    /* Ze začátku ovšem data mohou být nulová, a proto kontrolujeme, jestli už je máme nebo ne. Když data nemáme, tak přerušíme funkci. */\r\n    if (dataFromRequest == null) return;\r\n    /* Projedeme data ze serveru a najdeme přihlášeného uživatele a nastavíme ho */\r\n    setLoggedUser(\r\n      dataFromRequest.find(\r\n        (zaznam) => zaznam.id === parseInt(localStorage.getItem(\"loggedUser\"))\r\n      )\r\n    );\r\n  }, [dataFromRequest]);\r\n\r\n  /* Přihlášený uživatel - Protože uchováváme v loggedUser jenom ID, tak musíme poté procházet localStorage a hledat uživatele podle ID. */\r\n  const checkUser = () => {\r\n    console.log(parseInt(localStorage.getItem(\"loggedUser\")));\r\n    setLoggedUser(\r\n      dataFromRequest.find(\r\n        (zaznam) => zaznam.id === parseInt(localStorage.getItem(\"loggedUser\"))\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Header onClick={checkUser} />\r\n      <hr />\r\n      <div>\r\n        <ListOfShoppingLists user={loggedUser} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5D,eAAeU,OAAOA,CAAA,EAAG;IACvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCX,KAAK,CACFY,GAAG,CAAC,4BAA4B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAK;QAClBP,kBAAkB,CAACO,QAAQ,CAACC,IAAI,CAAC;QACjCL,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC;MACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBN,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;;EAEA;EACApB,SAAS,CAAC,MAAM;IACdW,OAAO,CAAC,CAAC,CAACQ,KAAK,CAAEC,KAAK,IAAK;MACzBC,OAAO,CAACD,KAAK,CACX,4CAA4C,EAC5CA,KAAK,CAACE,OACR,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,CAAC;;EAE9C;AACF;AACA;AACA;EACED,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,eAAe,IAAI,IAAI,EAAE;IAC7B;IACAe,aAAa,CACXf,eAAe,CAACgB,IAAI,CACjBC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CACvE,CACF,CAAC;EACH,CAAC,EAAE,CAACrB,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMsB,SAAS,GAAGA,CAAA,KAAM;IACtBV,OAAO,CAACW,GAAG,CAACJ,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;IACzDN,aAAa,CACXf,eAAe,CAACgB,IAAI,CACjBC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CACvE,CACF,CAAC;EACH,CAAC;EACD,oBACExB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA,CAACP,MAAM;MAACmC,OAAO,EAAEH;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BhC,OAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhC,OAAA;MAAA2B,QAAA,eACE3B,OAAA,CAACJ,mBAAmB;QAACqC,IAAI,EAAEhB;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CA7DQD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA+DjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}